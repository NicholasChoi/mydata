- 마지막으로 수행한 명령의 return value 출력
echo $?

- shell command의 실행 출력물을 다른 shell command의 inline parameter로 사용하기
e.g. ls -al `which vim`
e.g. ls -al $(which vim)

- ls 사용시 '.'으로 시작하는 파일 및 디렉토리만 출력하기
ls -d .*

- ls 사용시 디렉토리만 출력하기
ls -d .*/ */

- git stash에 대해
// for storing
git stash
// for restoring
git stash pop --index

- git reset과 git checkout에 대해
git reset (= git reset --mixed HEAD)
    : index의 모든 entry가 HEAD의 그것과 같아지도록 함.
git reset filename (= git reset HEAD filename)
    : filename에 대응하는 index의 entry가 HEAD의 그것과 같아지도록 함.
git reset branchname (= git reset --mixed branchname)
    : branch의 전환없이,
      HEAD가 branchname에 대응하는 branch의 마지막 commit을 가리키도록 하고,
      index의 모든 entry가 HEAD의 그것과 같아지도록 함.
      (만약 branchname을 현재 branch와 다른 branch의 이름으로 지정한 경우,
          현재 branch에서 이루어졌던 commit이 사라지게 됨.)
git reset branchname filename
    : branch의 전환없이, filename에 대응하는 index의 entry가
      branchname에 대응하는 branch의 마지막 commit의 그것과 같아지도록 함.
git checkout
    : "check out the current branch"의 의미로서,
      아무 작업도 수행되지 않음.
git checkout filename
    : filename에 대응하는 working tree의 entry가 index의 그것과 같아지도록 함.
git checkout branchname
    : 현재 branch가 branchname에 대응하는 branch로 전환되고,
      HEAD가 branchname에 대응하는 branch의 마지막 commit을 가리키도록 하고,
      index의 모든 entry가 HEAD의 그것과 같아지도록 하고,
      HEAD의 모든 entry를 working tree에 복사함.
      (만약 branch A를 base로 하여 branch B를 생성하고,
          branch B에서, 트래킹되고 있는 file C를 삭제하고,
          신규 file D를 생성하고, file C와 file D 모두 unstaged 상태인 상황에서
          branch A로 전환한 경우, HEAD로부터 file C가 working tree에 복사되고,
          file D는 untracked 상태로 유지됨.)
git checkout branchname filename
    : branch의 전환없이, filename에 대응하는 index의 entry가
      branchname에 대응하는 branch의 마지막 commit의 그것과 같아지도록 하고,
      filename에 대응하는 상기 entry를 working tree에 복사함.
      (file을 overwriting하는 대신에 merging하고자 하는 경우엔
          '-p' 또는 '--patch' 옵션을 붙여 실행하면 도움이 됨.)

- copy to the clipboard
pbcopy
e.g. $ pbcopy
     blah<CTRL-J>
     haha<CTRL-D><CTRL-D>
     $

- paste from the clipboard
pbpaste

- delete longest match of substring from front of $string
${string##substring}
e.g. The * is a wildcard, matching everything. The command ${0##/*} prints the value of $0 unless it starts with a forward slash, in which case it prints nothing.

- 최근에 실행된 명령에서 일부를 치환하기
^(old string)^(new string)
e.g. $ ls text.c
     ......
     $ ^text^test
